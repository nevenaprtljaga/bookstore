@using bookstore.Entities;

@model IEnumerable<AuthorsViewModel>

@{
    ViewData["Title"] = "List of Authors";
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <table class="table">
            <thead>
                <tr class="text-center">
                    <th>@Html.DisplayNameFor(model => model.Author.FullName)</th>
                    <th>@Html.DisplayNameFor(model => model.Author.DateOfBirth)</th>
                    <th>Actions</th>
                <tr/>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Author.FullName)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => item.Author.DateOfBirth)
                        </td>
                        <td class="align-middle">
                            <a class="btn btn-outline-primary" asp-action="Update" asp-route-id="@item.Author.Id"><i class="bi bi-pencil-square"></i>Update </a> |
                            <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Author.Id"><i class="bi bi-eye"></i>Details </a> |
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Author.Id"><i class="bi bi-trash"></i>Delete </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@await Html.PartialAsync("_CreateItem", "authors")